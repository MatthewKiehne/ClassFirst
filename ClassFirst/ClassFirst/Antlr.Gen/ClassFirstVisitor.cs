//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ClassFirst.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ClassFirst {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ClassFirstParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface IClassFirstVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParse([NotNull] ClassFirstParser.ParseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclaration([NotNull] ClassFirstParser.ClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.classBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassBlock([NotNull] ClassFirstParser.ClassBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.classMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassMember([NotNull] ClassFirstParser.ClassMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.classConstructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassConstructorDeclaration([NotNull] ClassFirstParser.ClassConstructorDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] ClassFirstParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] ClassFirstParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] ClassFirstParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] ClassFirstParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ClassFirstParser.fieldDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldDeclaration([NotNull] ClassFirstParser.FieldDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intExpression</c>
	/// labeled alternative in <see cref="ClassFirstParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntExpression([NotNull] ClassFirstParser.IntExpressionContext context);
}
} // namespace ClassFirst
